<Controls:MetroWindow x:Class="TimeTracker.Views.NotificationWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:converters="clr-namespace:TimeTracker.Converters"
        xmlns:local="clr-namespace:TimeTracker.Views"
        mc:Ignorable="d"
        Title="Уведомления"
        TextBlock.TextAlignment="Center"
        NonActiveWindowTitleBrush="#f1f1f1"
        WindowTitleBrush="#f1f1f1"
        TitleForeground="Black"
        GlowBrush="LightGray"
        ShowMaxRestoreButton="False"
        ShowMinButton="False"
        ShowInTaskbar="False"
        WindowCloseButtonStyle="{DynamicResource CloseWindowButtonStyle}"
        WindowStartupLocation="CenterScreen"
        MaxHeight="450" MaxWidth="350"
        MinHeight="450" MinWidth="350">
    
    <Controls:MetroWindow.Resources>

        <Style TargetType="ListBox" x:Key="ListStyle" BasedOn="{StaticResource {x:Type ListBox}}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=Items.Count}" Value="0">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Background="LightGray">
                                    <TextBlock Foreground="#3d5257" FontSize="20px" FontFamily="Segoe UI Semibold"  
                                        VerticalAlignment="Center" HorizontalAlignment="Center">Нет уведомлений</TextBlock>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        
    </Controls:MetroWindow.Resources>

    <Controls:MetroWindow.Visibility>
        <Binding Path="IsViewVisible" Converter="{StaticResource BoolToVisibilityConverter}" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"/>
    </Controls:MetroWindow.Visibility>

    <Grid>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <StackPanel Grid.Row="0" FlowDirection="RightToLeft" Orientation="Horizontal" Margin="0 10 0 10">
            <CheckBox Margin="15 0 10 0" Content="Выбрать все"/>
            <Button Style="{StaticResource DefaultButtonStyle}" Content="Очистить" Command="{Binding ClearAllNotificationsCommand}"/>
        </StackPanel>
        
        <ListView Grid.Row="1" BorderBrush="DarkGray" Style="{StaticResource ListStyle}"
                  BorderThickness="0 1 0 0"
                  ItemsSource="{Binding Notifications, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">

            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                <Border Height="45" Background="{TemplateBinding Background}">
                                    <Grid>

                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        
                                        <Label Grid.Column="0" Content="{Binding Path=Content.TimeStamp, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}, 
                                                     UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                        <Label Grid.Column="1" Content="{Binding Path=Content.NotificationMessage, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}, 
                                                     UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center"/>
                                        <CheckBox Grid.Column="2" IsChecked="{Binding Path=Content.IsReaded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}, 
                                                     UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" 
                                                     HorizontalAlignment="Center" Margin="0 0 10 0"/>
                                    </Grid>
                                </Border>

                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="true">
                                        <Setter Property="Cursor" Value="Hand" />
                                        <Setter Property="Background" Value="{StaticResource grid_row_selected_brush}" />
                                    </Trigger>

                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter Property="Cursor" Value="Hand" />
                                        <Setter Property="Background" Value="{StaticResource grid_row_hover_brush}" />
                                    </Trigger>

                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsSelected" Value="true" />
                                            <Condition Property="Selector.IsSelectionActive" Value="true" />
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Cursor" Value="Hand" />
                                        <Setter Property="Background" Value="{StaticResource grid_row_selected_brush}" />
                                    </MultiTrigger>

                                </ControlTemplate.Triggers>

                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListView.ItemContainerStyle>

        </ListView>

    </Grid>
</Controls:MetroWindow>

